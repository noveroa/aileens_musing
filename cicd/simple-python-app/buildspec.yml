version: 0.2
# https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
# run-as: Linux-user-name

env:
#   shell: shell-tag
#   variables:
#     key: "value"
#     key: "value"
#   exported-variables:
#     - variable
#     - variable
#   secrets-manager:
#     key: secret-id:json-key:version-stage:version-id
#   git-credential-helper: no | yes

  parameter-store:
    DOCKER_REGISTRY_USERNAME: /musings/docker-credentials/username
    DOCKER_REGISTRY_PASSWORD: /musings/docker-credentials/password
    DOCKER_REGISTRY_URL: /musings/docker-credentials/url
# proxy:
#   upload-artifacts: no | yes
#   logs: no | yes

# batch:
#   fast-fail: false | true
#   # build-list:
#   # build-matrix:
#   # build-graph:
#   # build-fanout:

phases:
  install:
    runtime-versions:
      python: 3.11
  pre_build:
    commands:
      - echo "Installing dependencies..."
      - pip install -r cicd/simple-python-app/requirements.txt
  build:
    commands:
      - echo "Running tests..."
      - cd cicd/simple-python-app/
      - echo "Login in to Docker & Authenticate"
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - echo "Building Docker image..."
      - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/simple-python-flask-app:latest" .
      - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/simple-python-flask-app:latest"
  post_build:
    commands:
      - echo "Build completed successfully!"

# reports:
#   report-group-name-or-arn:
#     files:
#       - location
#       - location
#     base-directory: location
#     discard-paths: no | yes
#     file-format: report-format

artifacts:
  files:
    - '**/*'
  base-directory: ../simple-python-app

# cache:
#   key: key
#   fallback-keys:
#     - fallback-key
#     - fallback-key
#   action: restore | save
#   paths:
#     - path
#     - path
